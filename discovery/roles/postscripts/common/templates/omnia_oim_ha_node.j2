#!/bin/bash
################################################################################################################
#  omnia_oim_ha_node:
#      Configure a passive OIM node.
#################################################################################################################
# Define log file
LOGFILE="/var/log/xcat/xcat.log"

# Get the directory of the log file
log_dir=$(dirname "$LOGFILE")

# Create the log directory if it doesn't exist
if [ ! -d "$log_dir" ]; then
    mkdir -p "$log_dir"
fi

# Create the log file if it doesn't exist
if [ ! -f "$LOGFILE" ]; then
    touch "$LOGFILE"
fi

echo "--------------------------" >> "$LOGFILE"
echo "$(date) - INFO - Starting OIM Passive node setup." >> "$LOGFILE"

if [ -f "/etc/debian_version" ];then
  str_os_type="debian"
else
  str_os_type="redhat"
fi

# Install and configure podman
if [ "$str_os_type" = "redhat" ]; then
    sudo dnf install -y podman
fi

# Enable and start podman.socket
sudo systemctl enable podman.socket || { echo "Error enabling podman.socket." >> "$LOGFILE"; exit 1; }
sudo systemctl start podman.socket || { echo "Error starting podman.socket." >> "$LOGFILE"; exit 1; }

{% if omnia_share_option == "NFS" %}
# Create omnia_path directory if it does not exist
echo "Creating omnia shared path directory if it does not exist" >> "$LOGFILE"
mkdir -p {{ oim_shared_path }}

# Validate if NFS server is reachable
echo "Validating if NFS server is reachable." >> "$LOGFILE"
ping -c1 -W1 {{ nfs_server_ip }} > /dev/null
if [ $? -ne 0 ]; then
    echo -e "NFS server {{ nfs_server_ip }} is not reachable." >> "$LOGFILE"
    exit 1
fi

# Mount NFS server share path in Omnia share path
echo "Mounting NFS server share path in Omnia share path." >> "$LOGFILE"
mount -t nfs -o nosuid,rw,sync,hard,intr,timeo=30 {{ nfs_server_ip }}:{{ nfs_server_share_path }} {{ oim_shared_path }}

# Validate if NFS server share path is mounted
echo "Validating if NFS server share path is mounted." >> "$LOGFILE"
if grep -qs "{{ nfs_server_ip }}:{{ nfs_server_share_path }}" /proc/mounts; then
    echo -e "NFS server share path is mounted." >> "$LOGFILE"
else
    echo -e "NFS server share path is not mounted. Provide valid NFS server details." >> "$LOGFILE"
    exit 1
fi

# Add NFS server share to /etc/fstab to mount on startup
echo "{{ nfs_server_ip }}:{{ nfs_server_share_path }} {{ oim_shared_path }} nfs nosuid,rw,sync,hard,intr" >> /etc/fstab
{% endif %}

podman load -i {{ container_images_path }} || { echo "Error loading container images." >> "$LOGFILE"; exit 1; }

# Ensure the management interface name is the same as active OIM, if not add the active OIM's interface name as an alternative name
if ! ifconfig | grep -w {{ hostvars['omnia_provision']['admin_nic'] }}; then
    passive_oim_node_ips={{ hostvars['omnia_provision']['passive_oim_nodes'].query_result | map(attribute='admin_ip') | join(' ') }}
    for admin_ip in ${passive_oim_node_ips};do 
        INTERFACE=$(ip addr show | awk "/${admin_ip}/{print \$NF; exit}")
        if [ -n "$INTERFACE" ]; then
            break
        fi
    done

    if [ -z "$INTERFACE" ]; then
        echo "Error: No admin interface found." >> "$LOGFILE"
        exit 1
    fi
    ip link set ${INTERFACE} name {{ hostvars['omnia_provision']['admin_nic'] }} || { echo "Error: re-naming admin interface." >> "$LOGFILE"; } 
fi

# Enable and start the pcs container
sudo systemctl start omnia_pcs || { echo "Error starting omnia_pcs service." >> "$LOGFILE"; exit 1; }
echo "$(date) - INFO - Finished OIM Passive node setup." >> "$LOGFILE"
echo "---------------------------"